{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAHUL\\\\Documents\\\\GitHub\\\\Data_Transformation\\\\client\\\\src\\\\Components\\\\stagesUi\\\\Stages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Stages() {\n  _s();\n\n  const [stages, setStages] = useState([\"Job_1\", \"Job_2\", \"Job_3\"]);\n  const [newStage, setNewStage] = useState();\n\n  const handleChangeAdd = () => {\n    setStages([...stages, newStage]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Choose a stage from this list:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        list: \"stages\",\n        name: newStage,\n        onChange: e => {\n          setNewStage(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleChangeAdd,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n      id: \"stages\",\n      children: stages.map((stage, key) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: stage\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Stages, \"4gpY9eFUWPeyqn9wCrWnq8p3fcw=\");\n\n_c = Stages;\nexport default Stages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stages\");","map":{"version":3,"sources":["C:/Users/RAHUL/Documents/GitHub/Data_Transformation/client/src/Components/stagesUi/Stages.js"],"names":["React","useState","Stages","stages","setStages","newStage","setNewStage","handleChangeAdd","e","target","value","map","stage","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAAD,CAApC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,EAAxC;;AACA,QAAMM,eAAe,GAAG,MAAI;AACxBH,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYE,QAAZ,CAAD,CAAT;AACH,GAFD;;AAGA,sBACI;AAAA,4BACG;AAAA,gEAEC;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAEA,QAA3B;AAAqC,QAAA,QAAQ,EAAGG,CAAD,IAAK;AAACF,UAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AAA4B;AAAjF;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAQ,QAAA,OAAO,EAAGH,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAMI;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA,gBACKJ,MAAM,CAACQ,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,KAAc;AAC1B,4BAAQ;AAAoB,UAAA,KAAK,EAAID;AAA7B,WAAeC,GAAf;AAAA;AAAA;AAAA;AAAA,gBAAR;AACC,OAFA;AADL;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GApBQX,M;;KAAAA,M;AAsBT,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction Stages() {\r\n    const [stages, setStages] = useState([\"Job_1\", \"Job_2\", \"Job_3\"]);\r\n    const [newStage, setNewStage] = useState();\r\n    const handleChangeAdd = ()=>{\r\n        setStages([...stages, newStage]);\r\n    }\r\n    return (\r\n        <div>\r\n           <label>\r\n            Choose a stage from this list:\r\n            <input list=\"stages\" name={newStage} onChange={(e)=>{setNewStage(e.target.value)}}/>  \r\n            <button onClick= {handleChangeAdd}>Add</button>\r\n           </label>   \r\n            <datalist id=\"stages\">\r\n                {stages.map((stage, key)=>{\r\n                return  <option key = {key} value = {stage} />;\r\n                })}   \r\n            </datalist>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Stages\r\n"]},"metadata":{},"sourceType":"module"}